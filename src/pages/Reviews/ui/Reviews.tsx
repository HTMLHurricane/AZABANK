import React, { useState } from 'react';
import { Rate, Card, Button, Input, Form, message } from 'antd';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUserAlt } from '@fortawesome/free-solid-svg-icons';

interface Review {
    name: string;
    rating: number;
    comment: string;
    avatar: string; // –î–æ–±–∞–≤–∏–º –ø–æ–ª–µ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞
}

const initialReviews: Review[] = [
    {
        name: '–£–∑–∞–∫–æ–≤ –¢–∏–º—É—Ä',
        rating: 1,
        comment: '–ú–æ—à–µ–Ω–Ω–∏–∫–∏ –ê–ó–ê–ë–ê–ù–ö, –Ω–æ –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—å—Å—è',
        avatar: 'üë§',
    },
    {
        name: '–¢—É—Ä—Å—ã–Ω–±–∞–µ–≤ –ú–∏—Ä–∞–ª–∏',
        rating: 0,
        comment: '–ê–∑–∞ –∫–∞—Ä—ã–∑—ã–Ω–¥—ã –∫–∞–π—Ç–∞—Ä',
        avatar: 'üë§',
    },
    {
        name: '–ë–∞—Ç—ã—Ä–∞–ª–∏',
        rating: 1,
        comment: '–¢—É–Ω–∏–º–µ–Ω –∑–≤–æ–Ω—Ç–µ—Ç–µ–±–µ—Ä–µ–¥–∏ –∫—Ä–µ–¥–∏—Ç –∞–ª—ã–Ω –¥–µ–ø',
        avatar: 'üë§',
    },
    {
        name: '–Æ–Ω—É—Å',
        rating: 5,
        comment: '–ê–π—Ñ–æ–Ω–≥–∞ –∫—Ä–µ–¥–∏—Ç –∞–ª–≤–µ–º –∫–∞–ª–≥–∞–Ω–∏–Ω –æ–∑–∏–Ω —Ç–æ–ª–µ–ø –∂–∏–±–µ—Ä–µ—Ä—Å–µ–Ω –ê–∑–∞',
        avatar: 'üë§',
    },
    {
        name: '–ú—É—Ä–∞–¥–¥—É–ª–∞',
        rating: 2,
        comment: '–ö–∞–π—Ç–∏–ø –∞–ª–∞–º–∏–∑ –∫—Ä–µ–¥–∏—Ç?',
        avatar: 'üë§',
    },
    {
        name: '–ú—É—Ö–∞',
        rating: 4,
        comment: '–ë–∞—Ä–∏ —Ñ–æ—Ä–º–∞–Ω–∏ –¥—É—Ä–∏—Å —Ç–æ–ª—Ç—ã—Ä—Å–∞–Ω –æ—Ñ–æ—Ä–º–∏—Ç—å –µ—Ç–∞–ª–∞—Å–∞–Ω –∫—Ä–µ–¥–∏—Ç.',
        avatar: 'üë§',
    },
    {
        name: '–ò—Å–∫–∞–Ω–¥–µ—Ä',
        rating: 5,
        comment: '–ê–∑–∞ 200 –º—ã–Ω –±–æ–ª–¥—ã –ø—Ä–æ–µ–∫—Ç—Ç–∏–Ω.',
        avatar: 'üë§',
    },
    {
        name: '–ò—Å–º–µ—Ç',
        rating: 5,
        comment: '–ö–∞–ª–∞–π –ê–∑–∞',
        avatar: 'üë§',
    },
];

export const Reviews: React.FC = () => {
    const [reviews, setReviews] = useState<Review[]>(initialReviews);
    const [name, setName] = useState<string>('');
    const [rating, setRating] = useState<number>(0);
    const [comment, setComment] = useState<string>('');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
    const handleSubmit = () => {
        if (!name || rating === 0 || !comment) {
            message.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }

        const newReview: Review = {
            name,
            rating,
            comment,
            avatar: 'üë§', // –ú–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –∞–≤–∞—Ç–∞—Ä, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ
        };

        setReviews([...reviews, newReview]);
        setName('');
        setRating(0);
        setComment('');
        message.success('–í–∞—à –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
    };

    return (
        <div className="p-8 max-w-screen-xl mx-auto">
            <h2 className="text-3xl font-bold text-center mb-6">
                –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
            </h2>

            {/* –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ */}
            <div className="mb-6 p-4 bg-white shadow-md rounded-md">
                <h3 className="text-2xl font-semibold mb-4">
                    –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤
                </h3>
                <Form layout="vertical" onFinish={handleSubmit}>
                    <Form.Item label="–í–∞—à–µ –∏–º—è" required>
                        <Input
                            value={name}
                            onChange={(e) => setName(e.target.value)}
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                        />
                    </Form.Item>

                    <Form.Item label="–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞" required>
                        <Rate
                            value={rating}
                            onChange={(value) => setRating(value)}
                            style={{ fontSize: '20px' }}
                        />
                    </Form.Item>

                    <Form.Item label="–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" required>
                        <Input.TextArea
                            value={comment}
                            onChange={(e) => setComment(e.target.value)}
                            placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
                            rows={4}
                        />
                    </Form.Item>

                    <Button type="primary" htmlType="submit" className="w-full">
                        –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                    </Button>
                </Form>
            </div>

            {/* –û—Ç–∑—ã–≤—ã */}
            <div>
                {reviews.length === 0 ? (
                    <p className="text-center text-gray-500">
                        –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!
                    </p>
                ) : (
                    <div className="grid grid-cols-1 gap-6">
                        {reviews.map((review, index) => (
                            <Card
                                key={index}
                                className="shadow-md rounded-md"
                                title={
                                    <div className="flex items-center">
                                        <FontAwesomeIcon
                                            icon={faUserAlt}
                                            className="text-xl mr-2"
                                        />
                                        <span className="font-semibold text-xl">
                                            {review.name}
                                        </span>
                                    </div>
                                }
                                extra={<Rate disabled value={review.rating} />}
                                style={{ width: '100%' }}
                            >
                                <p className="text-gray-600">
                                    {review.comment}
                                </p>
                            </Card>
                        ))}
                    </div>
                )}
            </div>
        </div>
    );
};
